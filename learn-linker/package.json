{
  "name": "learn-linker",
  "displayName": "Learn Linker",
  "description": "Connects code with your learning platform for interactive learning experience.",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.103.0"
  },
  "categories": [
    "Other",
    "Education",
    "Machine Learning"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "learn-linker.explainSelection",
        "title": "Learn Linker: Explain Selection"
      },
      {
        "command": "learn-linker.saveToReview",
        "title": "Learn Linker: Save to Review"
      },
      {
        "command": "learn-linker.openInLearningPlatform",
        "title": "Learn Linker: Open in Learning Platform"
      },
      {
        "command": "learn-linker.showSettings",
        "title": "Learn Linker: Show Settings"
      }
    ],
    "configuration": {
      "title": "Learn Linker",
      "properties": {
        "learnLinker.ai.provider": {
          "type": "string",
          "enum": ["openai", "deepseek", "anthropic", "doubao"],
          "enumDescriptions": [
            "OpenAI (GPT-4, GPT-3.5)",
            "DeepSeek (Cost-effective code model)",
            "Anthropic Claude (Coming soon)",
            "Doubao 豆包 (Coming soon)"
          ],
          "default": "openai",
          "description": "AI provider for code explanation",
          "order": 1
        },
        "learnLinker.ai.apiKey": {
          "type": "string",
          "default": "",
          "description": "API key for the selected AI provider",
          "order": 2
        },
        "learnLinker.ai.model": {
          "type": "string",
          "default": "",
          "description": "Model to use (optional, uses provider default if not set)",
          "order": 3
        },
        "learnLinker.ai.apiBase": {
          "type": "string",
          "default": "",
          "description": "Custom API endpoint (optional, for self-hosted or proxy)",
          "order": 4
        },
        "learnLinker.ai.temperature": {
          "type": "number",
          "default": 0.7,
          "minimum": 0,
          "maximum": 2,
          "description": "Temperature for response generation (0-2, default: 0.7)",
          "order": 5
        },
        "learnLinker.ai.maxTokens": {
          "type": "number",
          "default": 2000,
          "minimum": 100,
          "maximum": 8000,
          "description": "Maximum tokens in response (default: 2000)",
          "order": 6
        },
        "learnLinker.storage.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable local snippet storage",
          "order": 10
        },
        "learnLinker.storage.location": {
          "type": "string",
          "enum": ["workspace", "global"],
          "enumDescriptions": [
            "Store snippets per workspace",
            "Store snippets globally"
          ],
          "default": "workspace",
          "description": "Where to store code snippets",
          "order": 11
        },
        "learnLinker.platform.enabled": {
          "type": "boolean",
          "default": false,
          "description": "Enable connection to learning platform (optional)",
          "order": 20
        },
        "learnLinker.platform.url": {
          "type": "string",
          "default": "http://localhost:3000",
          "description": "URL of the learning platform",
          "order": 21
        },
        "learnLinker.platform.token": {
          "type": "string",
          "default": "",
          "description": "Personal Access Token for platform authentication",
          "order": 22
        },
        "learnLinker.platform.features.knowledgeLinks": {
          "type": "boolean",
          "default": true,
          "description": "Show knowledge links when platform is connected",
          "order": 23
        },
        "learnLinker.platform.features.snippetSync": {
          "type": "boolean",
          "default": true,
          "description": "Sync snippets to platform when connected",
          "order": 24
        },
        "learnLinker.platform.features.autoSync": {
          "type": "boolean",
          "default": false,
          "description": "Automatically sync snippets in background",
          "order": 25
        },
        "learnLinker.platform.features.syncInterval": {
          "type": "number",
          "default": 5,
          "minimum": 1,
          "maximum": 60,
          "description": "Sync interval in minutes (when auto-sync is enabled)",
          "order": 26
        }
      }
    },
    "menus": {
      "editor/context": [
        {
          "command": "learn-linker.explainSelection",
          "when": "editorHasSelection",
          "group": "LearnLinker"
        },
        {
          "command": "learn-linker.saveToReview",
          "when": "editorHasSelection",
          "group": "LearnLinker"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "pnpm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "dev": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "pnpm run compile-tests && pnpm run compile && pnpm run lint",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "dependencies": {
    "axios": "^1.6.0",
    "eventsource": "^2.0.2",
    "uuid": "^9.0.1",
    "zustand": "^4.4.7"
  },
  "devDependencies": {
    "@types/eventsource": "^1.1.15",
    "@types/uuid": "^9.0.7",
    "@types/vscode": "^1.103.0",
    "@types/mocha": "^10.0.10",
    "@types/node": "22.x",
    "@typescript-eslint/eslint-plugin": "^8.39.0",
    "@typescript-eslint/parser": "^8.39.0",
    "eslint": "^9.32.0",
    "typescript": "^5.9.2",
    "ts-loader": "^9.5.2",
    "webpack": "^5.101.0",
    "webpack-cli": "^6.0.1",
    "@vscode/test-cli": "^0.0.11",
    "@vscode/test-electron": "^2.5.2"
  }
}
